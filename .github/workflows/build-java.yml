name: Build Java (via Docker)

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Java using Docker
        run: |
          cd java
          make

      - name: Upload .aar artifact
        uses: actions/upload-artifact@v4
        with:
          name: libsignal-aar
          path: java/**/build/outputs/aar/*.aar
# name: Build Java Only (libsignal)

# on:
#   push:
#     branches: [main]
#     tags:
#       - 'v*'
#   pull_request:
#     branches: [main]
#   workflow_dispatch: {}

# jobs:
#   build-java:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Install core utilities
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y coreutils sed findutils dos2unix

#       - name: Checkout repository (with submodules)
#         uses: actions/checkout@v4
#         with:
#           submodules: recursive
#           ref: main

#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           distribution: 'temurin'
#           java-version: '17'

#       - name: Set up Rust (nightly)
#         uses: actions-rs/toolchain@v1
#         with:
#           toolchain: nightly
#           override: true
#           components: rust-src

#       - name: Verify Rust version
#         run: rustc --version

#       - name: Install all Rust targets for Android
#         run: |
#           rustup target add aarch64-linux-android
#           rustup target add armv7-linux-androideabi
#           rustup target add x86_64-linux-android
#           rustup target add i686-linux-android

#       - name: Install required system packages
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y clang libclang-dev cmake make protobuf-compiler unzip curl

#       - name: Install Android SDK & NDK
#         run: |
#           export ANDROID_HOME=$HOME/android-sdk
#           export ANDROID_NDK_VERSION=27.0.12077973

#           mkdir -p "$ANDROID_HOME/cmdline-tools"
#           cd "$ANDROID_HOME/cmdline-tools"

#           curl -sSL https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip -o cmdline-tools.zip
#           unzip -q cmdline-tools.zip
#           mv cmdline-tools latest

#           export PATH="$ANDROID_HOME/cmdline-tools/latest/bin:$PATH"
#           yes | sdkmanager --licenses

#           sdkmanager \
#             "platform-tools" \
#             "platforms;android-33" \
#             "build-tools;33.0.2" \
#             "ndk;$ANDROID_NDK_VERSION"

#           echo "ANDROID_NDK_HOME=$ANDROID_HOME/ndk/$ANDROID_NDK_VERSION" >> $GITHUB_ENV
#           echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
#           echo "$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$PATH" >> $GITHUB_PATH

#       - name: Fix gradlew permissions and line endings
#         working-directory: java
#         run: |
#           if [ -f gradlew ]; then
#             dos2unix gradlew
#             sed -i '1s|.*|#!/usr/bin/env bash|' gradlew
#             chmod +x gradlew
#           fi

#       - name: Ensure dirname and bash are available
#         run: |
#           which dirname || (echo "dirname not found" && exit 1)
#           which bash || (echo "bash not found" && exit 1)

#       - name: Fix Gradle wrapper path (if misplaced)
#         working-directory: java
#         run: |
#           if [ -f wrapper/gradle-wrapper.jar ]; then
#             mkdir -p gradle/wrapper
#             mv wrapper/gradle-wrapper.* gradle/wrapper/
#           fi

#       - name: Generate local.properties for SDK and NDK
#         working-directory: java
#         run: |
#           echo "sdk.dir=$HOME/android-sdk" > local.properties
#           echo "ndk.dir=$HOME/android-sdk/ndk/27.0.12077973" >> local.properties

#       - name: Install Rust target for Android
#         run: rustup target add armv7-linux-androideabi

#       - name: Build Java library
#         working-directory: java
#         run: |
#           export ANDROID_HOME=$HOME/android-sdk
#           export ANDROID_NDK_HOME=$HOME/android-sdk/ndk/27.0.12077973
#           unset ANDROID_SDK_ROOT
#           ./gradlew build --no-daemon

#       - name: Run Java tests
#         working-directory: java
#         run: |
#           export ANDROID_HOME=$HOME/android-sdk
#           export ANDROID_NDK_HOME=$HOME/android-sdk/ndk/27.0.12077973
#           unset ANDROID_SDK_ROOT
#           ./gradlew test --no-daemon

#       - name: Upload .aar artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: libsignal-aar
#           path: java/**/build/outputs/aar/*.aar
